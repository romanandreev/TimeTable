!!!
%html
  %head
    %title Расписание #{@timetable.course.to_s}-го курса СтатМода
    %script{ :src => '/js/redips-drag-min.js' }
    %script{ :src => '/js/redips-table-source.js' }
    %script{ :src => '/js/jquery-1.8.2.min.js'}
    %script{ :src => '/js/jquery.jeditable.mini.js'}
    %script{ :src => '/js/jquery.autocomplete.js'}
    %script{ :src => '/js/underscore-min.js' }
    %script{ :src => '/js/createNewLesson.js' }
    %script{ :src => '/js/get_timetable_json.js' }
    %link{ :rel => 'stylesheet', :type => 'text/css', :href => '/styles/TimeTable.css'}
    %link{ :rel => 'stylesheet', :type => 'text/css', :href => '/styles/jquery.autocomplete.css'}

    %body
    :javascript

      function mergeTableCells() { 
        REDIPS.table.merge('v', false);
        REDIPS.table.merge();
      }

      function makeEditable(classname) {

        var formStyle = 'display: inline-block; width:100%';
        var inputHeight = '14px';
        var inputWidth = '80%';

        $('.' + classname + '.loc').editable(function (value, settings) {
          return(value);
        }, { 
             style: formStyle,
             data: function(str) { return $.trim(str); },
             height: inputHeight,
             width: inputWidth,
             placeholder: ''
           });

        $('.' + classname + '.prof').editable(function (value, settings) {
          return(value);
        }, { 
             type: 'autocomplete',
             style: formStyle,
             data: function(str) { return $.trim(str); },
             placeholder: '',
             height: inputHeight,
             width: inputWidth,
             autocomplete: {
               data: #{@@stafflist_json}
             }
           });

        $('.' + classname + '.name').editable(function (value, settings) {
          return(value);
        }, {
          type: 'autocomplete',
          style: formStyle,
          data: function(str) { return $.trim(str); },
          placeholder: '',
          height: inputHeight,
          width: inputWidth,
          autocomplete: {
            data: courses[$("#sem").attr('value')]
          }
        });
      }

      courses = #{@@courselist_json};
      course_ids = #{@@courseidlist_json};

      $(document).ready(function () {

        $(".DeleteButton").click(function() {
          $(this).parents(".drag").remove();
        });

        $("#newlesson").one("click", createNewLesson);

        REDIPS.drag.init();
        REDIPS.drag.enableTable(false, 'LessonTable');
        REDIPS.drag.dropMode = 'switch';
        // REDIPS.drag.rowDropMode = 'switch';
        REDIPS.table.mark_nonempty = false;
        REDIPS.table.color.cell = '#AADDAA';
        REDIPS.table.onmousedown('timetable', true);

        $.editable.addInputType('autocomplete', {
          element: $.editable.types.text.element,
          plugin: function(settings, original) {
            $('input', this).autocomplete(settings.autocomplete.data, { matchContains: true});
          }
        });

        makeEditable('editable');

        function setJsonData() {
          $('.jsondata').val(JSON.stringify(window.getTimeTableJson()));
          return true;
        }

        $('#xmldownloadform').submit(setJsonData);
        $('#xmlsaveform').submit(setJsonData);

        $('option').click(function ()
        {
          $(this).closest('form').submit();
        });

        $('.FileSelector').prop('selectedIndex', -1);


        function updateCourseIdentifiers() {
          $('#courseIds').html(course_ids[$("#sem").attr('value')]);
        }

        $('#sem').change(function() {
          updateCourseIdentifiers(); 
        });

        updateCourseIdentifiers();
        $('#courseIds').prop('selectedIndex', -1);
      });

    %div{ :id => 'uppanel'}
      %input{ :id => 'year', :value => @timetable.year }
        %label{ :for => 'year', :id => 'YearLabel' }
          Год:
      %input{ :id => 'sem', :value => @timetable.semester }
        %label{ :for => 'sem', :id => 'SemesterLabel' }
          Семестр:

      %form{ :action => '/loadfile', :method => 'post' }
        %select{ :onchange => 'this.form.submit()', :name => 'filename', :id => 'FileSelector' }
          - @@filenames.each do |fn|
            - if fn == @filename
              %option{ :value => fn, :selected => 'selected'}#{fn}
            - else
              %option{ :value => fn}#{fn}
      %div{:id => 'FileLabel' }
        Файл:

      %button{ :id => 'MergeButton', :onclick => 'REDIPS.table.merge();' }
        Объединить ячейки

      %button{ :id => 'SplitButton', :onclick => 'REDIPS.table.split();' }
        Разбить ячейки по горизонтали

      %form{ :id => 'DownloadForm', :action => '/download', :target => '_blank', :method => 'POST', :id => 'xmldownloadform' }
        %input{ :type => 'hidden', :class => 'jsondata', :name => 'jsondata'}
        %input{ :type => 'hidden', :name => 'filename', :value => @filename }
        %input{ :type => 'submit', :id => 'DownloadButton', :value => 'Скачать XML' }
            
      %form{ :id => 'SaveForm', :action => '/save', :method => 'POST', :id => 'xmlsaveform' }
        %input{ :type => 'hidden', :class => 'jsondata', :name => 'jsondata'}
        %input{ :type => 'text', :name => 'filename', :value => @filename, :id => 'SaveFilename' }
        %input{ :type => 'submit', :id => 'SaveButton', :value => 'Сохранить как' }

      %form{ :id => 'NewForm', :action => '/new'}
        %input{ :type => 'submit', :id => 'NewButton', :value => 'Создать новое расписание' }

      %form{ :id => 'NewFromIdForm' }
        %label{ :id => 'courseIdsLabel' }
          Создать пару по идентификатору
        %select{ :onchange => 'createNewLessonFromId()', :id => 'courseIds' }

    %div{ :id => 'drag' }
      %table{ :id => 'helpertable' }
        %tbody
          %tr
            %td{ :style => 'height: 62px', :align => 'center', :id => 'newlesson', :class => 'mark'}
              Нажмите, чтобы создать новую пару

      %div{ :id => 'StackTableDiv' }
        %table{ :id => 'stacktable', :border => '1px' }
          %tbody
            - 12.times do
              %tr
                %td{ :style => 'height: 64px', :align => 'center' }

      %div{ :class => 'empty'}
      %table{ :id => 'timetable', :border => '1px' }
        %tbody
          %tr
            %th{ :width => '2%', :class => 'mark', :bgcolor => '#ddddff' }
            - @@specnames.each do |name|
              %td{ :bgcolor => '#ddddff', :align => 'center', :width => '33%', :class => 'mark' }
                = name
          - @timetable.weekday_tables.each do |weekday|
            %tr
              %th{ :class => 'mark', :bgcolor => '#ffffcd' }
                %input{ :type => 'button', :class => 'ClearDayButton', :style => 'cursor:pointer',
                        :onclick => "$('tr.#{weekday.id}').find('td').html('')" }

              %th{ :colspan => 3, :bgcolor => '#ffffcd', :class => 'mark' }
                = weekday.name

            - 1.upto(5).each do |index|
              %tr{ :class => weekday.id, :style => 'height: 50px' }
                %th{ :bgcolor => '#f6956f', :style => 'height: 64px', :rowspan => 2}
                  %div{ :class => 'row' }
                    = index
                
                - double_class = weekday.getDoubleClass(index)
                = haml :top_halfrow, :locals => { :lessons => double_class.topLessons }
              %tr{ :class => weekday.id, :style => 'height: 50px' }
                - specs_to_skip = double_class.topLessons.select{|k,v| v.denominator? }.keys
                = haml :bottom_halfrow, :locals => { :lessons => double_class.bottomLessons,
                                                     :skip => Set.new(specs_to_skip) }
